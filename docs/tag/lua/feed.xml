<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
  <title>Whoopee</title>
  <link>https://www.whoop.ee</link>
  <description>Explore the power and versatility of Lua programming language. From beginner tutorials to advanced techniques. From beginner tutorials to advanced techniques, dive into Lua's elegant syntax and discover its applications in game development, scripting, embedded software and more. Also some useful stuff for web-development.</description>
  <atom:link href="https://www.whoop.ee/feed.xml" rel="self" type="application/rss+xml"/>
  <item>
  <guid>https://www.whoop.eepost/strictly-typed-lua.html</guid>
  <title>Strictly typed Luas</title>
  <link>https://www.whoop.eepost/strictly-typed-lua.html</link>
  <description>Explanation of the typing system in the Lua language provided by Lua Language Server Annotations. Learn how to annotate types for your projects and functions. </description>
  <pubDate>Tue, 11 Mar 2025 00:00:00 +0200</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/testing-multiple-lua-versions-with-laura-and-github-actions.html</guid>
  <title>Testing multiple Lua versions with Laura and GitHub Actions</title>
  <link>https://www.whoop.eepost/testing-multiple-lua-versions-with-laura-and-github-actions.html</link>
  <description>This demonstration showcases the process of testing a piece of code across six different versions of the Lua programming language. The goal is to ensure compatibility, identify potential issues, and observe any differences in behavior between versions. By running these tests, we can assess the codeâ€™s performance, stability, and necessary adjustments for seamless functionality across all Lua versions. </description>
  <pubDate>Sun, 09 Mar 2025 00:00:00 +0200</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/printing-a-table-in-lua-tutorial.html</guid>
  <title>Printing a table in Lua tutorial</title>
  <link>https://www.whoop.eepost/printing-a-table-in-lua-tutorial.html</link>
  <description>By default, Lua does not provide a built-in tool to print the structure of a table. While there are many existing solutions available online, this tutorial will guide you through creating your own custom function to inspect and display Lua tables in a clear and readable format. By implementing this yourself, you'll gain a deeper understanding of Lua tables and how to work with them efficiently. </description>
  <pubDate>Thu, 06 Mar 2025 00:00:00 +0200</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/turn-neovim-nto-lua-ide.html</guid>
  <title>Turn NeoVim into Lua IDE</title>
  <link>https://www.whoop.eepost/turn-neovim-nto-lua-ide.html</link>
  <description>A comprehensive step-by-step guide on transforming Neovim into a fully functional Integrated Development Environment (IDE) specifically tailored for Lua development</description>
  <pubDate>Sun, 02 Mar 2025 00:00:00 +0200</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/iterators.html</guid>
  <title>Iterators</title>
  <link>https://www.whoop.eepost/iterators.html</link>
  <description>An article provides a detailed explanation of iterators in Lua, including their purpose, functionality, and usage. It also includes practical examples to demonstrate how iterators work and how they can be implemented effectively in Lua programs. </description>
  <pubDate>Mon, 24 Feb 2025 00:00:00 +0200</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/how-to-split-string-in-lua.html</guid>
  <title>How to split string in Lua</title>
  <link>https://www.whoop.eepost/how-to-split-string-in-lua.html</link>
  <description>Example how to split string in Lua with generic function considering utf8. </description>
  <pubDate>Tue, 18 Feb 2025 00:00:00 +0200</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/understanding-coroutines.html</guid>
  <title>Understanding Coroutines in Lua</title>
  <link>https://www.whoop.eepost/understanding-coroutines.html</link>
  <description>Coroutines are a powerful tool in Lua language to provide asynchronous programming, but these might be a bit hard to understand for beginners.</description>
  <pubDate>Fri, 24 Jan 2025 00:00:00 +0200</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/using-lua-command-line-client-cli.html</guid>
  <title>Using Lua Command Line Client (CLI)</title>
  <link>https://www.whoop.eepost/using-lua-command-line-client-cli.html</link>
  <description>Understanding chunks in Lua: local and global variable scope, loading, and execution chunks independently from the host program. </description>
  <pubDate>Thu, 07 Nov 2024 00:00:00 +0200</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/what-are-lua-chunk.html</guid>
  <title>What are chunks in Lua?</title>
  <link>https://www.whoop.eepost/what-are-lua-chunk.html</link>
  <description>Understanding chunks in Lua: local and global variable scope, loading, and execution chunks independently from the host program. </description>
  <pubDate>Wed, 06 Nov 2024 00:00:00 +0200</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/how-does-the-hree-dots-parameter-work-in-lua.html</guid>
  <title>How does the three dots parameter work in Lua?</title>
  <link>https://www.whoop.eepost/how-does-the-hree-dots-parameter-work-in-lua.html</link>
  <description>A function that can accept a variable number of arguments is called a variadic function, which is indicated by three dots ('...') vararg expressions at the end of its argument list. Explanation of how variadic functions and vararg expression work in Lua. </description>
  <pubDate>Mon, 21 Oct 2024 00:00:00 +0300</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/bitwise-operations.html</guid>
  <title>Bitwise operations in Lua</title>
  <link>https://www.whoop.eepost/bitwise-operations.html</link>
  <description>Explaining bitwise operators in Lua language and its application in practice. </description>
  <pubDate>Sat, 12 Oct 2024 00:00:00 +0300</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/logic-in-lua.html</guid>
  <title>Logic in Lua: AND, OR, NOT, XOR, NXOR</title>
  <link>https://www.whoop.eepost/logic-in-lua.html</link>
  <description>Definitive guide to logical operation in Lua. Ternary logical operator in Lua. Truth tables for AND, OR, NOT, XOR, NXOR. </description>
  <pubDate>Tue, 08 Oct 2024 00:00:00 +0300</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/laura-unit-testing-framework-for-lua.html</guid>
  <title>Documentation for Laura unit-testing framework</title>
  <link>https://www.whoop.eepost/laura-unit-testing-framework-for-lua.html</link>
  <description>Documentation for Laura is a lightweight unit-testing framework for Lua with simplicity in mind. </description>
  <pubDate>Sat, 05 Oct 2024 00:00:00 +0300</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/string-buffers-in-lua.html</guid>
  <title>String buffers in Lua</title>
  <link>https://www.whoop.eepost/string-buffers-in-lua.html</link>
  <description>Working with string in Lua in performant way, using string buffers. </description>
  <pubDate>Wed, 14 Aug 2024 00:00:00 +0300</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/binary-search-algorithm.html</guid>
  <title>Binary Search Algorithm</title>
  <link>https://www.whoop.eepost/binary-search-algorithm.html</link>
  <description></description>
  <pubDate>Mon, 05 Aug 2024 00:00:00 +0300</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/a-definitive-guide-for-compiling-lua-from-source-code.html</guid>
  <title>A definitive guide for compiling Lua from source code</title>
  <link>https://www.whoop.eepost/a-definitive-guide-for-compiling-lua-from-source-code.html</link>
  <description>Compiling Lua from the source code is an extremely easy procedure and every beginner in programming can do it, without any problems. Here is a detailed guide on how to compile Lua from the source code. </description>
  <pubDate>Thu, 11 Jul 2024 00:00:00 +0300</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/single-vs-double-quotes-in-lua.html</guid>
  <title>Single vs double quotes in Lua</title>
  <link>https://www.whoop.eepost/single-vs-double-quotes-in-lua.html</link>
  <description>There is no technical difference between single and double quotes in strings in Lua language. Just choose the style of quotes that you like and use it.</description>
  <pubDate>Sat, 06 Jul 2024 00:00:00 +0300</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/lua-syntax-cheat-sheet.html</guid>
  <title>Lua Syntax Cheat Sheet (Short Version)</title>
  <link>https://www.whoop.eepost/lua-syntax-cheat-sheet.html</link>
  <description>Very brief syntax cheat sheet of Lua language syntax. Download PDF of Lua cheat sheet. </description>
  <pubDate>Mon, 24 Jun 2024 00:00:00 +0300</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/rounding-to-the-step.html</guid>
  <title>Rounding a number to step</title>
  <link>https://www.whoop.eepost/rounding-to-the-step.html</link>
  <description>Rounding integers to a given step is a very common task, sometimes asked at technical interviews and very often such a task appears in daily jobs. </description>
  <pubDate>Fri, 21 Jun 2024 00:00:00 +0300</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/arctangent-function-in-lua.html</guid>
  <title>Arctangent function in Lua</title>
  <link>https://www.whoop.eepost/arctangent-function-in-lua.html</link>
  <description>math.atan and math.atan2 in Lua. Explanation of arctangent function and why it is inconsistent in different versions of Lua. </description>
  <pubDate>Fri, 10 May 2024 00:00:00 +0300</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/types-in-lua-references-vs-values.html</guid>
  <title>Types in Lua: References vs Values</title>
  <link>https://www.whoop.eepost/types-in-lua-references-vs-values.html</link>
  <description>Explanation of what means 'pass by value' and 'pass by reference' in Lua language. Difference between simple values and reference types. </description>
  <pubDate>Thu, 09 May 2024 00:00:00 +0300</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/object-oriented-programming-in-lua.html</guid>
  <title>Object-oriented programming in Lua</title>
  <link>https://www.whoop.eepost/object-oriented-programming-in-lua.html</link>
  <description>Object-oriented tutorial for Lua language. Examples with metatables, classes-, closure-, prototype-based and inheritance. </description>
  <pubDate>Tue, 30 Apr 2024 00:00:00 +0300</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/stylua-opinionated-code-formatter-for-lua.html</guid>
  <title>StyLua is an optimized code formatter for Lua</title>
  <link>https://www.whoop.eepost/stylua-opinionated-code-formatter-for-lua.html</link>
  <description>StyLua is an amazing code formatter inspired by prettier. </description>
  <pubDate>Thu, 25 Apr 2024 00:00:00 +0300</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/lua-cheatsheet.html</guid>
  <title>Lua cheatsheet</title>
  <link>https://www.whoop.eepost/lua-cheatsheet.html</link>
  <description>Definite guide of Lua syntax in one place. </description>
  <pubDate>Fri, 05 Jan 2024 00:00:00 +0200</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/info-warn-error.html</guid>
  <title>warn, error and print functions in Lua</title>
  <link>https://www.whoop.eepost/info-warn-error.html</link>
  <description>Lua has some useful functions for debugging and error handling: print, warn, and error. Here are some tricks to using them. </description>
  <pubDate>Wed, 01 Jun 2022 00:00:00 +0300</pubDate>
</item>
<item>
  <guid>https://www.whoop.eepost/getting-started-with-lua.html</guid>
  <title>Getting started with Lua</title>
  <link>https://www.whoop.eepost/getting-started-with-lua.html</link>
  <description>Get stared with Lua programming language. A brief introduction to Lua language. Installation, compilation, REPL guide.</description>
  <pubDate>Mon, 30 May 2022 00:00:00 +0300</pubDate>
</item>
</channel>
</rss>
