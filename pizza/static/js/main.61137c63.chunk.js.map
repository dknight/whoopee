{"version":3,"sources":["img/list-olive.svg","img/list-paprika.svg","img/list-salami.svg","img/list-tomato.svg","img/list-mushroom.svg","img/list-onion.svg","img/list-parsley.svg","img/list-pineapple.svg","img/list-shrimp.svg","img/list-sauce.svg","img/top-pizza-img.svg","Config.js","lib/price-helper.js","components/ui/Ingredient.js","components/ui/IngredientsList.js","components/ui/Pizza.js","ActionsTypes.js","store/reducers.js","store/index.js","components/ui/TopPanel.js","actions.js","components/ui/OrderForm.js","components/ui/Price.js","components/ReactivePizzaApp.js","components/containers.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Config","BASE_PRICE","FLOAT_ROUND","formatPrice","num","Number","isNaN","toFixed","toString","calculatePrice","ingredients","arguments","length","undefined","defaultPrice","filter","ingr","used","reduce","sum","price","images","olive","paprika","salami","tomato","mushroom","onion","parsley","pineapple","shrimp","sauce","Ingredient","_ref","onClick","react_default","a","createElement","className","concat","id","lib","type","data","src","slug","alt","name","title","IngredientsList","onUse","map","i","ui_Ingredient","key","defaultProps","Pizza","onDrop","types","ActionsTypes","USE_INGREDIENT","DROP_INGREDIENT","FETCH_INGRIDIENTS","RESET_INGRIDIENTS","ORDER_TOGGLE","ORDER_SUBMIT","AppReducers","combineReducers","state","action","Object","objectSpread","ingredient","order","open","middleware","applyMiddleware","thunk","store","next","createStore","TopPanel","toggleOrder","logo","PriceContainer","getState","window","confirm","checkIgredientsAndToggleOrder","dropIngredient","retval","dropoff","tgl","OrderForm","submitOrder","onSubmit","e","preventDefault","newOrder","order-name","target","value","order-address","order-email","order-phone","order-message","order-ingredients","order-price","dispatch","str","JSON","stringify","alert","placeholder","required","Price","ReactivePizzaApp","OrderFormContainer","TopPanelContainer","PizzaContainer","IngredientsListContainer","stateDefaults","connect","ReactivePizzaAppContainer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","document","addEventListener","keyCode","url","approot","getElementById","ReactDOM","render","react_redux_es","fetchIgredients","axios","get","resp","err","Promise","reject","URL","process","origin","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.61137c63.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/list-olive.26e0b7b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/list-paprika.e0bb1434.svg\";","module.exports = __webpack_public_path__ + \"static/media/list-salami.3f98044d.svg\";","module.exports = __webpack_public_path__ + \"static/media/list-tomato.6008a1d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/list-mushroom.3b475bd3.svg\";","module.exports = __webpack_public_path__ + \"static/media/list-onion.96d9de88.svg\";","module.exports = __webpack_public_path__ + \"static/media/list-parsley.4ef87244.svg\";","module.exports = __webpack_public_path__ + \"static/media/list-pineapple.08af149f.svg\";","module.exports = __webpack_public_path__ + \"static/media/list-shrimp.3782e85e.svg\";","module.exports = __webpack_public_path__ + \"static/media/list-sauce.539b2492.svg\";","module.exports = __webpack_public_path__ + \"static/media/top-pizza-img.71fb0744.svg\";","const Config = {\n  BASE_PRICE: 3,\n  FLOAT_ROUND: 2\n}\n\nexport default Config","import Config from '../Config'\n\nconst calculatePrice = (ingredients=[], defaultPrice=3) =>\n  ingredients\n    .filter(ingr => ingr.used)\n    .reduce((sum, ingr) => sum + ingr.price, defaultPrice)\n\nexport const formatPrice = num => \n  (Number.isNaN(num) || num == null) ?\n  \"0.00€\" :\n  num.toFixed(Config.FLOAT_ROUND).toString() + '€'\n\nexport default calculatePrice","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { formatPrice } from '../../lib/price-helper'\nimport { Draggable } from 'react-drag-and-drop'\n\nimport olive from '../../img/list-olive.svg'\nimport paprika from '../../img/list-paprika.svg'\nimport salami from '../../img/list-salami.svg'\nimport tomato from '../../img/list-tomato.svg'\nimport mushroom from '../../img/list-mushroom.svg'\nimport onion from '../../img/list-onion.svg'\nimport parsley from '../../img/list-parsley.svg'\nimport pineapple from '../../img/list-pineapple.svg'\nimport shrimp from '../../img/list-shrimp.svg'\nimport sauce from '../../img/list-sauce.svg'\n\nconst images = {\n  olive, paprika, salami, tomato, mushroom, onion,\n  parsley, pineapple, shrimp, sauce\n}\nconst Ingredient = ({ingr, onClick}) =>\n    <li className={`Ingredient ${ingr.used ? 'used' : ''}`} id={`ingredient-${ingr.id}`} onClick={onClick}>\n      <Draggable type=\"ingredient\" data={ingr.id}>\n        <img className=\"ingredient-image\" src={images[ingr.slug]} alt={ingr.name} title={ingr.name}/>\n        <span className=\"ingredient-name\">{ingr.name}</span>\n        <span className=\"ingredient-price\">{formatPrice(ingr.price)}</span>\n      </Draggable>\n    </li>\n\nIngredient.propTypes = {\n  ingr:    PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default Ingredient","import React from 'react'\nimport Ingredient from './Ingredient'\nimport PropTypes from 'prop-types'\n\nconst IngredientsList = ({ingredients, onUse}) =>\n  <div id=\"ingredients-list-container\">\n    <h2>Ingredients</h2>\n    <ul className=\"IngredientList\">\n      {ingredients.map((ingr, i) =>\n        <Ingredient key={i} ingr={ingr} onClick={() => onUse(ingr)}/>\n      )}\n    </ul>\n  </div>\n\nIngredientsList.propTypes = {\n  ingredients: PropTypes.array.isRequired,\n  onUse:       PropTypes.func.isRequired\n}\n\nIngredientsList.defaultProps = {\n  ingredients: [],\n  onUse:       () => {}\n}\n\nexport default IngredientsList","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Droppable, Draggable } from 'react-drag-and-drop'\n\nconst Pizza = ({ingredients, onDrop}) =>\n    <div id=\"Pizza-container\">\n      <Droppable types={['ingredient']} onDrop={onDrop}>\n        <div>\n          <div id=\"Pizza-base\">\n            {ingredients.filter(ingr => ingr.used).map(ingr =>\n              <Draggable key={ingr.id} type=\"dropoff\" data={ingr.id}> \n                <div className={`Pizza-ingredient Pizza-ingredient-${ingr.id}`}></div>\n              </Draggable>\n            )}\n          </div>\n        </div>\n      </Droppable>\n    </div>\n\nPizza.propTypes = {\n  ingredients: PropTypes.array.isRequired,\n  onDrop:      PropTypes.func.isRequired\n}\n\nexport default Pizza","const ActionsTypes = {\n  USE_INGREDIENT:     'USE_INGREDIENT',\n  DROP_INGREDIENT:    'DROP_INGREDIENT',\n  FETCH_INGRIDIENTS:  'FETCH_INGRIDIENTS',\n  RESET_INGRIDIENTS:  'RESET_INGRIDIENTS',\n  ORDER_TOGGLE:       'ORDER_TOGGLE',\n  ORDER_SUBMIT:       'ORDER_SUBMIT'\n}\n\nexport default ActionsTypes","import ActionsTypes from '../ActionsTypes'\nimport { combineReducers } from 'redux'\n\nexport const ingredient = (state={}, action) => {\n  switch (action.type) {\n    case ActionsTypes.USE_INGREDIENT:\n    case ActionsTypes.DROP_INGREDIENT:\n      return (state.id === action.id) ?\n        {\n          ...state,\n          used: !action.used\n        } :\n        state\n    default:\n      return state\n  }\n}\n\nexport const ingredients = (state=[], action) => {\n  switch (action.type) {\n    case ActionsTypes.USE_INGREDIENT:\n    case ActionsTypes.DROP_INGREDIENT:\n      return state.map(ingr => ingredient(ingr, action))\n    case ActionsTypes.FETCH_INGRIDIENTS:\n      return action.ingredients\n    case ActionsTypes.RESET_INGRIDIENTS:\n      return state.map(ingr => ({\n        ...ingr,\n        used: false\n      }))\n    default:\n      return state\n  }\n}\n\nexport const order = (state={}, action) => {\n  switch (action.type) {\n    case ActionsTypes.ORDER_TOGGLE:\n      return { open: action.open }\n    case ActionsTypes.ORDER_SUBMIT:\n      return action\n    default:\n      return state\n  }\n}\n\nconst AppReducers = combineReducers({\n  ingredients: ingredients,\n  order: order\n})\n\nexport default AppReducers","import { createStore, applyMiddleware } from 'redux'\nimport AppReducers from './reducers'\nimport thunk from 'redux-thunk'\n\nconst logger = store => next => action => {\n  // let result\n  // console.groupCollapsed(`dispatching ${action.type}`)\n  // console.log('prev state', store.getState())\n  // console.log('action', action)\n  // result = next(action)\n  // console.log('next state', store.getState())\n  // console.groupEnd()\n  // return result\n  return next(action)\n}\n\n//const saver = store => next => action => {\n//  localStorage['pzapp-store'] = JSON.stringify(store.getState());\n//  return next(action);\n//};\nconst initialState = {\n  ingredients: [],\n  order: {\n    open: false\n  }\n}\nconst middleware = applyMiddleware(thunk, logger)\nconst store = createStore(AppReducers, initialState, middleware)\n\nexport default store","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { PriceContainer } from '../containers'\nimport store from '../../store'\n\nimport logo from '../../img/top-pizza-img.svg'\n\nconst TopPanel = ({toggleOrder}) => {\n\n  const checkIgredientsAndToggleOrder = () => {\n    let open = false\n    const usedIngredientsCount = store.getState().ingredients.filter(ingr => ingr.used).length\n    if (usedIngredientsCount > 0) {\n      open = true\n    } else {\n      open = window.confirm('You havent choosed any ingredient do you wish to order empty base?');\n    }\n    return toggleOrder(open)\n  }\n\n  return (\n    <div id=\"TopPanel\">\n      <img id=\"logo-img\" src={logo} alt=\"Reactive Pizza\"/>\n      <h1>Reactive Pizza</h1>\n      <div id=\"order-price\">\n        <PriceContainer/>\n      </div>\n      <button id=\"order-button\" onClick={() => checkIgredientsAndToggleOrder()}>\n        Order\n      </button>\n    </div>\n  )\n}\n\nTopPanel.propTypes = {\n  toggleOrder: PropTypes.func.isRequired\n}\n\nexport default TopPanel","import ActionsTypes from './ActionsTypes'\nimport axios from 'axios'\n\nexport const useIngredient = ingr =>\n  ({\n    type: ActionsTypes.USE_INGREDIENT,\n    ...ingr\n  })\n\nexport const dropIngredient = data => {\n  let retval = {\n    type: ActionsTypes.DROP_INGREDIENT\n  }\n\n  if (typeof data.dropoff !== 'undefined') {\n    retval = { ...retval, used: true, id: data.dropoff}\n  } else {\n    retval = {...retval, used: false, id: data.ingredient}\n  }\n\n  return retval\n}\n\nexport const fetchIgredients = (ingredients=[]) => ({\n  type: ActionsTypes.FETCH_INGRIDIENTS,\n  ingredients\n})\n\nexport const fetchAsyncIgredients = url => dispatch => {\n  dispatch(fetchIgredients())\n  \n  return axios.get(url)\n    .then(resp => dispatch({\n        type: ActionsTypes.FETCH_INGRIDIENTS,\n        ingredients: resp.data.ingredients\n      })\n    )\n    .catch(err => Promise.reject(err))\n}\n\nexport const resetIgredients = () =>\n  ({\n    type: ActionsTypes.RESET_INGRIDIENTS,\n  })\n\nexport const toggleOrder = tgl =>\n  ({\n    type: ActionsTypes.ORDER_TOGGLE,\n    open: tgl\n  })\n\nexport const submitOrder = order =>\n  ({\n    type: ActionsTypes.ORDER_SUBMIT,\n    ...order\n  })\n\n","import React from 'react'\nimport store from '../../store'\nimport PropTypes from 'prop-types'\nimport { PriceContainer } from '../containers'\nimport calculatePrice, { formatPrice } from '../../lib/price-helper'\nimport { resetIgredients } from '../../actions'\n\nconst OrderForm = ({order, toggleOrder, submitOrder}) => {\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const ingredients = store.getState().ingredients.filter(ingr => ingr.used)\n    const newOrder = {\n      'order-name': e.target['order-name'].value,\n      'order-address': e.target['order-address'].value,\n      'order-email': e.target['order-email'].value,\n      'order-phone': e.target['order-phone'].value,\n      'order-message': e.target['order-message'].value,\n      'order-ingredients': ingredients,\n      'order-price': calculatePrice(ingredients)\n    }\n\n    // TODO make server request\n    submitOrder(newOrder);\n    store.dispatch(resetIgredients())\n    \n    // Tmp string to output\n    let str = 'Thank you! Your order is sent to kitchen!\\n'\n    str += 'Order\\'s data for server:\\n'\n    str += JSON.stringify(newOrder)\n    alert(str)\n  }\n\n  return (\n    <div className={`OrderForm ${order.open ? 'opened' : ''}`}>\n      <div className=\"order-inner\">\n        <h2>Make order</h2>\n        <button id=\"btn-order-close\" onClick={() => toggleOrder(false)}>&times;</button>\n\n        <table className=\"table-order-ingredients\">\n          <thead>\n            <tr>\n              <th>Ingredient</th>\n              <th>Price</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>Pizza base</td>\n              <td>{formatPrice(3.0)}</td>\n            </tr>\n            {store.getState().ingredients\n              .filter(ingr => ingr.used)\n              .map((ingr,i) => \n              <tr key={i}>\n                <td>{ingr.name}</td>\n                <td>{formatPrice(ingr.price)}</td>\n              </tr>\n            )}\n          </tbody>\n          <tfoot>\n            <tr className=\"total-row\">\n              <td>Total</td>\n              <td><PriceContainer/></td>\n            </tr>\n          </tfoot>\n        </table>\n\n        <form id=\"order-form\" onSubmit={onSubmit}>\n          <h3>Your data please:</h3>\n          <input type=\"text\" name=\"order-name\" id=\"order-name\" placeholder=\"Your name*\" required/>\n          <input type=\"tel\" name=\"porder-hone\" id=\"order-phone\" placeholder=\"Phone number*\" required/>\n          <input type=\"email\" name=\"order-email\" id=\"order-email\" placeholder=\"E-mail*\" required/>\n          <input type=\"address\" name=\"order-address\" id=\"order-address\" placeholder=\"Delivery address*\"required/>\n          <textarea name=\"order-message\" id=\"order-message\" placeholder=\"Additional message\"></textarea>\n          <input id=\"btn-order-submit\" type=\"submit\" value=\"Send to kitchen\"/>\n          <p className=\"disclaimer\">* - mandatory fields</p>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nOrderForm.propTypes = {\n  order:       PropTypes.object.isRequired,\n  toggleOrder: PropTypes.func.isRequired,\n  submitOrder: PropTypes.func.isRequired\n}\n\nexport default OrderForm","import React from 'react'\nimport PropTypes from 'prop-types'\nimport calculatePrice, { formatPrice } from '../../lib/price-helper'\nimport Config from '../../Config'\n\nconst Price = ({ingredients}) => {\n  const price = calculatePrice(ingredients, Config.BASE_PRICE)\n  return <span className=\"price\">{formatPrice(price)}</span>\n}\n\nPrice.propTypes = {\n  ingredients: PropTypes.array.isRequired\n}\n\nexport default Price","import React from 'react'\nimport {\n  IngredientsListContainer,\n  PizzaContainer,\n  TopPanelContainer,\n  OrderFormContainer }\n  from './containers'\nimport { Droppable } from 'react-drag-and-drop'\n\nconst ReactivePizzaApp = ({onDrop}) =>\n  <Droppable types={['dropoff']} onDrop={onDrop}>\n    <div id=\"reactive-pizza-app\">\n      <OrderFormContainer/>\n      <TopPanelContainer/>\n      <div id=\"reactive-pizza-table\">\n        <PizzaContainer/>\n        <IngredientsListContainer/>\n      </div>\n    </div>\n  </Droppable>\n\nexport default ReactivePizzaApp\n","import IngredientsList from './ui/IngredientsList'\nimport Pizza from './ui/Pizza'\nimport TopPanel from './ui/TopPanel'\nimport OrderForm from './ui/OrderForm'\nimport Price from './ui/Price'\nimport ReactivePizzaApp from './ReactivePizzaApp'\nimport { useIngredient,\n         dropIngredient,\n         toggleOrder,\n         submitOrder } from '../actions'\nimport { connect } from 'react-redux'\n\nconst stateDefaults = state => ({\n  ingredients: state.ingredients,\n  order: state.order\n})\n\nexport const IngredientsListContainer = connect(\n  state => stateDefaults(state),\n  dispatch =>\n    ({\n      onUse(id) {\n        dispatch(useIngredient(id))\n      }\n    })\n)(IngredientsList)\n\nexport const PizzaContainer = connect(\n  state => stateDefaults(state),\n  dispatch => ({\n    onDrop(id) {\n      dispatch(dropIngredient(id))\n    }\n  })\n)(Pizza)\n\nexport const TopPanelContainer = connect(\n  state => ({ order: state.order }),\n  dispatch => ({\n    toggleOrder(tgl) {\n      dispatch(toggleOrder(tgl))\n    }\n  })\n)(TopPanel)\n\nexport const OrderFormContainer = connect(\n  state => ({ order: state.order }),\n  dispatch => ({\n    toggleOrder(tgl) {\n      dispatch(toggleOrder(tgl))\n    },\n    submitOrder(order) {\n      dispatch(submitOrder(order))\n    }\n  })\n)(OrderForm)\n\nexport const PriceContainer = connect(\n  state => (state) => state,\n  dispatch => ({})\n)(Price)\n\nexport const ReactivePizzaAppContainer = connect(\n  state => ({}),\n  dispatch => ({\n    onDrop(id) {\n      dispatch(dropIngredient(id))\n    }\n  })\n)(ReactivePizzaApp)","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is contoggleOrdersidered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ReactivePizzaAppContainer } from './components/containers'\nimport registerServiceWorker from './registerServiceWorker'\nimport store from './store'\nimport { Provider } from 'react-redux'\nimport { toggleOrder, fetchAsyncIgredients } from './actions'\n\nimport './stylesheets/normalize.css'\nimport './stylesheets/layout.css'\nimport './stylesheets/IngredientList.css'\nimport './stylesheets/OrderForm.css'\nimport './stylesheets/Pizza.css'\nimport './stylesheets/TopPanel.css'\n\ndocument.addEventListener('keypress', (e) => {\n  if (e.keyCode === 27) {\n    store.dispatch(toggleOrder(false))\n  }\n})\nconst approot = document.getElementById('react-root')\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactivePizzaAppContainer/>\n  </Provider>, approot)\n\nstore.dispatch(fetchAsyncIgredients('data/init-data.json'))\n\nregisterServiceWorker()"],"sourceRoot":""}